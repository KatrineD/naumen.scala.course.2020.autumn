[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(--addPluginSbtFile=C:\Users\User\AppData\Local\Temp\idea7.sbt, None, None)
[debug] > Exec(addPluginSbtFile=C:\Users\User\AppData\Local\Temp\idea7.sbt, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (AdoptOpenJDK Java 11.0.8)
[debug]       Load.loadUnit: plugins took 276.96196ms
[debug]       Load.loadUnit: defsScala took 0.895035ms
[debug] [Loading] Scanning directory C:\Users\User\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 73.83139 ms
[debug]           Load.resolveProject(global-plugins) took 164.794745ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\User\.sbt\1.0\plugins, plugins: List(<none>))) took 351.249201ms
[debug] [Loading] Done in C:\Users\User\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 426.117318ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.786682ms
[debug]     Load.loadUnit(file:/C:/Users/User/.sbt/1.0/plugins/, ...) took 734.540776ms
[debug]   Load.apply: load took 1317.367393ms
[debug]   Load.apply: resolveProjects took 21.990542ms
[debug]   Load.apply: finalTransforms took 210.671687ms
[debug]   Load.apply: config.delegates took 32.428981ms
[debug]   Load.apply: Def.make(settings)... took 2580.456955ms
[debug]   Load.apply: structureIndex took 326.788338ms
[debug]   Load.apply: mkStreams took 6.228057ms
[info] loading global plugins from C:\Users\User\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 10147.803831ms
[debug]           Load.loadUnit: plugins took 63.331401ms
[debug]           Load.loadUnit: defsScala took 0.009617ms
[debug] [Loading] Scanning directory C:\Users\User\Desktop\ex\SbtExampleProject\project
[debug]             Load.loadUnit: mkEval took 19.765778ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User\Desktop\ex\SbtExampleProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.666876 ms
[info] loading settings for project sbtexampleproject-build from idea7.sbt ...
[debug]               Load.resolveProject(sbtexampleproject-build) took 16.235007ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sbtexampleproject-build, base: C:\Users\User\Desktop\ex\SbtExampleProject\project, plugins: List(<none>))) took 22.445753ms
[debug] [Loading] Done in C:\Users\User\Desktop\ex\SbtExampleProject\project, returning: (sbtexampleproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 434.489996ms
[debug]           Load.loadUnit: cleanEvalClasses took 11.840617ms
[debug]         Load.loadUnit(file:/C:/Users/User/Desktop/ex/SbtExampleProject/project/, ...) took 512.452267ms
[debug]       Load.apply: load took 516.847298ms
[debug]       Load.apply: resolveProjects took 0.303901ms
[debug]       Load.apply: finalTransforms took 24.105029ms
[debug]       Load.apply: config.delegates took 1.115587ms
[debug]       Load.apply: Def.make(settings)... took 300.840666ms
[debug]       Load.apply: structureIndex took 84.348689ms
[debug]       Load.apply: mkStreams took 0.00577ms
[info] loading project definition from C:\Users\User\Desktop\ex\SbtExampleProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8433.221177ms
[debug]     Load.loadUnit: defsScala took 0.004488ms
[debug] [Loading] Scanning directory C:\Users\User\Desktop\ex\SbtExampleProject
[debug]       Load.loadUnit: mkEval took 0.564847ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User\Desktop\ex\SbtExampleProject, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.494408 ms
[info] loading settings for project sbtexampleproject from build.sbt ...
[debug]         Load.resolveProject(sbtexampleproject) took 93.565111ms
[debug]       Load.loadTransitive: finalizeProject(Project(id sbtexampleproject, base: C:\Users\User\Desktop\ex\SbtExampleProject, plugins: List(<none>))) took 100.904267ms
[debug] [Loading] Done in C:\Users\User\Desktop\ex\SbtExampleProject, returning: (sbtexampleproject)
[debug]     Load.loadUnit: loadedProjectsRaw took 7914.001652ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.610621ms
[debug]   Load.loadUnit(file:/C:/Users/User/Desktop/ex/SbtExampleProject/, ...) took 16368.155485ms
[debug] Load.apply: load took 16372.618476ms
[debug] Load.apply: resolveProjects took 0.280179ms
[debug] Load.apply: finalTransforms took 142.0733ms
[debug] Load.apply: config.delegates took 0.863619ms
[debug] Load.apply: Def.make(settings)... took 300.550869ms
[debug] Load.apply: structureIndex took 65.645284ms
[debug] Load.apply: mkStreams took 0.014746ms
[info] set current project to SbtExampleProject (in build file:/C:/Users/User/Desktop/ex/SbtExampleProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 2081 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 2081, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to SbtExampleProject (in build file:/C:/Users/User/Desktop/ex/SbtExampleProject/)
[debug] > Exec(idea-shell, None, None)
